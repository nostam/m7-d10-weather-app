{"version":3,"sources":["lib/api.ts","components/CurrentWeather.tsx","components/WeatherBox.tsx","components/Next5DaysRow.tsx","pages/Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["owmKey","process","ipdataKey","upsplashKey","openWeatherMap","upsplash","CurrentWeatherRow","data","useState","useRef","Row","className","Col","name","md","weather","iconId","id","night","style","fontSize","main","temp","OverlayTrigger","overlay","Tooltip","feels_like","emojiTooltip","Button","variant","disabled","pointerEvents","padding","verticalAlign","temp_max","temp_min","humidity","wind","speed","deg","windDirection","dayjs","extend","isoWeek","WeatherBox","Number","parseFloat","toString","toFixed","dt_txt","format","Next5DaysRow","useCallback","Accordion","defaultActiveKey","Card","Toggle","as","Header","eventKey","Collapse","Body","map","entry","index","Home","input","setInput","currentWeatherData","setCurrentWeatherData","bg","setBg","next5DaysData","setNext5DaysData","fetchWeather","a","city","axios","get","cw","next5","console","log","fetchCityBackground","res","img","results","Math","floor","random","length","urls","regular","useEffect","backgroundImage","span","offset","Form","onSubmit","e","preventDefault","FormControl","placeholder","aria-label","aria-describedby","value","onChange","target","CurrentWeather","list","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f984990.chunk.js","sourcesContent":["const owmKey = process.env.REACT_APP_OPENWEATHERMAP_KEY!;\r\nconst ipdataKey = process.env.REACT_APP_IPDATA_KEY!;\r\nconst upsplashKey = process.env.REACT_APP_UPSPLASH_KEY!;\r\n\r\nexport const ipdata = {\r\n  url: `https://api.ipdata.co?api-key=${ipdataKey}`,\r\n  key: ipdataKey,\r\n};\r\nexport const openWeatherMap = {\r\n  currentWeatherUrl: `https://api.openweathermap.org/data/2.5/weather?&appid=${owmKey}&units=metric&q=`,\r\n  next5DayUrl: `https://api.openweathermap.org/data/2.5/forecast?appid=${owmKey}&units=metric&q=`,\r\n  key: owmKey,\r\n};\r\nexport const upsplash = {\r\n  url: `https://api.unsplash.com/search/photos?per_page=5&client_id=${upsplashKey}&query=`,\r\n  key: upsplashKey,\r\n};\r\n","import React, { useState, useRef } from \"react\";\r\nimport { OverlayTrigger, Tooltip, Row, Col, Button } from \"react-bootstrap\";\r\nimport { CurrentWeather as Weather } from \"../types/openWeatherMap\";\r\nimport { WeatherIcon } from \"weather-react-icons\";\r\ninterface Props {\r\n  data: Weather;\r\n}\r\nfunction CurrentWeatherRow({ data }: Props) {\r\n  const [show, setShow] = useState(false);\r\n  const target = useRef(null);\r\n  const currentWeather = () => {\r\n    return (\r\n      <WeatherIcon\r\n        iconId={data?.weather[0].id!}\r\n        name=\"owm\"\r\n        night\r\n        className=\"weather-icon-big\"\r\n        style={{ fontSize: \"5rem\" }}\r\n      />\r\n    );\r\n  };\r\n  const emojiTooltip = (temp: number = data.main.feels_like): string => {\r\n    if (temp < 2) return \"ğŸ¥¶\";\r\n    else if (temp > 29) return \"ğŸ¥µ\";\r\n    else if (temp > 18) return \"ğŸ˜€\";\r\n    else return \"ğŸ™ƒ\";\r\n  };\r\n  const windDirection = (deg: number = data.wind.deg): string => {\r\n    switch (true) {\r\n      case deg >= 360 || deg <= 21:\r\n        return \"N\";\r\n        break;\r\n      case deg >= 22 && deg <= 44:\r\n        return \"NNE\";\r\n        break;\r\n      case deg >= 45 && deg <= 66:\r\n        return \"NE\";\r\n        break;\r\n      case deg >= 67 && deg <= 89:\r\n        return \"ENE\";\r\n        break;\r\n      case deg >= 90 && deg <= 111:\r\n        return \"E\";\r\n        break;\r\n      case deg >= 112 && deg <= 134:\r\n        return \"ESE\";\r\n        break;\r\n      case deg >= 135 && deg <= 156:\r\n        return \"SE\";\r\n        break;\r\n      case deg >= 157 && deg <= 179:\r\n        return \"SSE\";\r\n        break;\r\n      case deg >= 180 && deg <= 201:\r\n        return \"S\";\r\n        break;\r\n      case deg >= 202 && deg <= 224:\r\n        return \"SSW\";\r\n        break;\r\n      case deg >= 225 && deg <= 246:\r\n        return \"SW\";\r\n        break;\r\n      case deg >= 247 && deg <= 269:\r\n        return \"WSW\";\r\n        break;\r\n      case deg >= 270 && deg <= 291:\r\n        return \"W\";\r\n        break;\r\n      case deg >= 292 && deg <= 314:\r\n        return \"WNW\";\r\n        break;\r\n      case deg >= 315 && deg <= 336:\r\n        return \"NW\";\r\n        break;\r\n      case deg >= 337 && deg <= 359:\r\n        return \"NNW\";\r\n        break;\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n  return (\r\n    <Row className=\"justify-content-between mx-2\">\r\n      {data && (\r\n        <>\r\n          <Col>\r\n            <h1>{data.name} </h1>\r\n            <Row className=\"justify-content-between py-3\">\r\n              <Col md={6}> {data.weather && currentWeather()}</Col>\r\n              <Col md={6}>\r\n                <span className=\"weather-icon-big d-flex flex-row-reverse\">{`${data.main.temp}Â°C`}</span>\r\n                <OverlayTrigger\r\n                  overlay={\r\n                    <Tooltip id=\"tooltip-disabled\">\r\n                      Feels like {emojiTooltip()}\r\n                    </Tooltip>\r\n                  }\r\n                >\r\n                  <span className=\"weather-icon-big d-flex flex-row-reverse\">\r\n                    <Button\r\n                      variant=\"none\"\r\n                      disabled\r\n                      style={{\r\n                        pointerEvents: \"none\",\r\n                        fontSize: \"2rem\",\r\n                        padding: 0,\r\n                        verticalAlign: \"top\",\r\n                      }}\r\n                    >\r\n                      {data && `${data.main.feels_like}Â°C`}\r\n                    </Button>\r\n                  </span>\r\n                </OverlayTrigger>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n          <Col className=\"text-right pr-0\">\r\n            <h5>{`Highest: ${data.main.temp_max}Â°C`}</h5>\r\n            <h5>{`Lowest: ${data.main.temp_min}Â°C`}</h5>\r\n            <h5>{`Humidty: ${data.main.humidity}%`}</h5>\r\n            <h5>{`Wind: ${data.wind.speed}m/s ${windDirection()}`}</h5>\r\n          </Col>\r\n        </>\r\n      )}\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default CurrentWeatherRow;\r\n","import React from \"react\";\r\nimport { Col } from \"react-bootstrap\";\r\nimport { WeatherIcon } from \"weather-react-icons\";\r\nimport { List } from \"../types/openWeatherMap\";\r\nimport dayjs from \"dayjs\";\r\nimport isoWeek from \"dayjs/plugin/isoWeek\";\r\ninterface Props {\r\n  data: List;\r\n  //   weatherIcon: () => void;\r\n}\r\n// function WeatherBox({ data }: Props) {\r\n//   return <div>{data && <div>{weatherIcon(data.weather[0].id)}</div>}</div>;\r\n// }\r\ndayjs.extend(isoWeek);\r\nfunction WeatherBox({ data }: Props) {\r\n  const weatherIcon = (id: number) => {\r\n    return (\r\n      <WeatherIcon\r\n        iconId={id}\r\n        name=\"owm\"\r\n        night\r\n        className=\"\"\r\n        style={{ fontSize: \"3rem\" }}\r\n      />\r\n    );\r\n  };\r\n  const shortTemp = (temp: number): string => {\r\n    return Number.parseFloat(temp.toString()).toFixed(1);\r\n  };\r\n  return (\r\n    <div>\r\n      {data && (\r\n        <Col className=\"text-center mx-1 px-0 justify-content-between\">\r\n          <h5>{shortTemp(data.main.temp)}Â°C</h5>\r\n          {weatherIcon(data.weather[0].id)}\r\n          <p>{dayjs(data.dt_txt).format(\"ddd hhA\")}</p>\r\n        </Col>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WeatherBox;\r\n","import React, { useCallback } from \"react\";\r\nimport { Accordion, Card, Row } from \"react-bootstrap\";\r\nimport { List } from \"../types/openWeatherMap\";\r\nimport WeatherBox from \"./WeatherBox\";\r\nimport { WeatherIcon } from \"weather-react-icons\";\r\nimport \"../styles/forecast.css\";\r\ninterface Props {\r\n  data: List[];\r\n}\r\nfunction Next5DaysRow({ data }: Props) {\r\n  const weatherIcon = useCallback(\r\n    () => (id: number) => {\r\n      return (\r\n        <WeatherIcon\r\n          iconId={id}\r\n          name=\"owm\"\r\n          night\r\n          className=\"\"\r\n          style={{ fontSize: \"5rem\" }}\r\n        />\r\n      );\r\n    },\r\n    []\r\n  );\r\n  return (\r\n    <div>\r\n      {data && (\r\n        <Accordion defaultActiveKey=\"0\">\r\n          <Card>\r\n            <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n              5 Days Forecast\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey=\"0\">\r\n              <Card.Body className=\"forecastRow\">\r\n                {data.map((entry, index) => (\r\n                  <WeatherBox\r\n                    data={entry}\r\n                    key={`nex5${index}`}\r\n                    // weatherIcon={weatherIcon}\r\n                  />\r\n                ))}\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n        </Accordion>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Next5DaysRow;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col, Form, FormControl } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { openWeatherMap, upsplash } from \"../lib/api\";\r\nimport { CurrentWeather, Next5Days } from \"../types/openWeatherMap\";\r\nimport { Upsplash } from \"../types/upsplash\";\r\nimport CurrentWeatherRow from \"../components/CurrentWeather\";\r\nimport \"../styles/Home.css\";\r\nimport Next5DaysRow from \"../components/Next5DaysRow\";\r\n\r\nfunction Home() {\r\n  const [input, setInput] = useState<string>(\"\");\r\n  const [\r\n    currentWeatherData,\r\n    setCurrentWeatherData,\r\n  ] = useState<CurrentWeather>();\r\n  const [bg, setBg] = useState<string>(\"\");\r\n  const [next5DaysData, setNext5DaysData] = useState<Next5Days>();\r\n  async function fetchWeather(city = input) {\r\n    try {\r\n      const cw = await axios.get<CurrentWeather>(\r\n        openWeatherMap.currentWeatherUrl + city\r\n      );\r\n      setCurrentWeatherData(cw.data);\r\n      const next5 = await axios.get<Next5Days>(\r\n        openWeatherMap.next5DayUrl + city\r\n      );\r\n      setNext5DaysData(next5.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  async function fetchCityBackground(city = input) {\r\n    try {\r\n      const res = await axios.get<Upsplash>(upsplash.url + city);\r\n      const img =\r\n        res.data.results[Math.floor(Math.random() * res.data.results.length)]\r\n          .urls.regular;\r\n      setBg(img);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  function handleInput(e: React.ChangeEvent<HTMLInputElement>) {\r\n    setInput(e.target.value);\r\n  }\r\n  function handleSubmit(e: React.SyntheticEvent) {\r\n    e.preventDefault();\r\n    fetchWeather();\r\n    fetchCityBackground();\r\n  }\r\n\r\n  useEffect(() => {\r\n    const city = \"Amsterdam\";\r\n    fetchWeather(city);\r\n    fetchCityBackground(city);\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"city-background\"\r\n      style={{\r\n        backgroundImage: `linear-gradient(rgba(0,0,0,0.25),rgba(0,0,0,0.75)), url(${\r\n          bg.length > 0 ? bg : \"https://picsum.photos/1000\"\r\n        })`,\r\n      }}\r\n    >\r\n      <Row className=\"py-5\">\r\n        <Col className=\"home-main\" md={{ span: 8, offset: 2 }}>\r\n          <div className=\"content mb-5\">\r\n            <Form className=\"city-search-box my-3\" onSubmit={handleSubmit}>\r\n              <FormControl\r\n                placeholder=\"Enter a city name\"\r\n                aria-label=\"City Name\"\r\n                aria-describedby=\"city-addon1\"\r\n                value={input}\r\n                onChange={handleInput}\r\n              />\r\n            </Form>\r\n            {currentWeatherData && (\r\n              <CurrentWeatherRow data={currentWeatherData} />\r\n            )}\r\n            {next5DaysData && <Next5DaysRow data={next5DaysData.list} />}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\nimport Home from \"./pages/Home\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nfunction App() {\n  return (\n    <Router>\n      <Route path=\"/\" component={Home} />\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"weather-react-icons/lib/css/weather-icons.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}